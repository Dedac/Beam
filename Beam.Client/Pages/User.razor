@layout UserLayout
@page "/User"
@page "/User/{Name}"
@using Beam.Shared;
@inject IDataService data;
<h2>User Rays</h2>
<TelerikTabStrip>
    <TabStripTab Title="List">
        @foreach (var ray in Rays)
        {
        <p>
            <RayItem ray="@ray" />
        </p>
        }
    </TabStripTab>
    <TabStripTab Title="Grid">
        <TelerikGrid Data="@Rays" Sortable="true" Pageable="true" PageSize="42" FilterMode="GridFilterMode.FilterRow">
            <GridColumns>
                <GridColumn Field="@nameof(Ray.Text)" Title="Ray" Width="600px" />
                <GridColumn Field="@nameof(Ray.PrismCount)" Title="Times Prismed" />
                <GridColumn Field="@nameof(Ray.RayCastDate)" Title="Date" >
                    <Template>
                        @((context as Ray)?.RayCastDate.ToLocalTime().ToString())
                    </Template>
                </GridColumn>
                <GridColumn Field="@nameof(Ray.UsersPrismed)" Filterable="false" Sortable="false">
                    <Template>
                    @foreach (var user in (context as Ray)?.UsersPrismed)
                    {
                       <p>@user</p> 
                    }
                    </Template>
                </GridColumn>
            </GridColumns>
        </TelerikGrid>
    </TabStripTab>
    <TabStripTab Title="Chart">
        <TelerikChart>
            <ChartTitle Text="@($"{Name}'s Rays by Prism Count and Length")" />
            <ChartCategoryAxes>
                <ChartCategoryAxis BaseUnit="ChartCategoryAxisBaseUnit.Hours" Type="ChartCategoryAxisType.Date">
                    <ChartCategoryAxisLabels Format="{0:M/dd HH:mm }" />
                </ChartCategoryAxis>
            </ChartCategoryAxes>
            <ChartSeriesItems>
                <ChartSeries Type="ChartSeriesType.Line"
                            Data="@ChartData"
                            CategoryField="@nameof(RayChartData.Time)"
                            Field="@nameof(RayChartData.TextLength)"
                             Name="Text Length">
                </ChartSeries>
                <ChartSeries Type="ChartSeriesType.Column"
                            Data="@ChartData"
                            CategoryField="@nameof(RayChartData.Time)"
                            Field="@nameof(RayChartData.TimesPrismed)" 
                            Name="Times Prismed">
                            <ChartSeriesLabels Visible="true" />
                </ChartSeries>
            </ChartSeriesItems>
            <ChartLegend Position="Telerik.Blazor.ChartLegendPosition.Bottom">
            </ChartLegend>           
        </TelerikChart>
    </TabStripTab>
</TelerikTabStrip>

@code{
    [Parameter]
    public string Name { get; set; }

    List<Ray> Rays = new List<Ray>();
    List<RayChartData> ChartData = new List<RayChartData>();

    protected override async Task OnParametersSetAsync()
    {
        Rays = await data.GetUserRays(Name);
        ChartData = Rays.Select(r => new RayChartData(r)).ToList();
    }

    private class RayChartData{
        public int TextLength {get;set;}
        public int TimesPrismed {get;set;}
        public DateTime Time {get;set;}
        public 
        RayChartData(Ray ray){
            Time = ray.RayCastDate;
            TextLength = ray.Text.Length;
            TimesPrismed = ray.PrismCount;
        }
    }
}